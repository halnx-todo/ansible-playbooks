---
  #
  # install nginx
  #
  # install the pre-compiled nginx with code changed 
  - name :  "install needed libraries on the system"
    apt:  
      pkg: 
      - ufw
      - nginx
      - nginx-extras
      update_cache: yes 
      state: present 
      force: yes
    become: yes
    become_user: root
    tags:
      - kernel
      - nginx

  - name: "create data directory for nginx"
    file: 
      path: "{{ data_dir }}/{{ item }}"
      owner: "{{ deploy_user }}"
      group: "{{ deploy_group }}" 
      state: directory
    with_items:
      - nginx
      - nginx/access
      - nginx/health-check
      - nginx/htdocs
      - nginx/conf
      - nginx/conf/sites-available
      - nginx/conf/sites-enabled
      - nginx/ssl
      - nginx/logs
    become: yes
    become_user: root
    tags: nginx

  - name: "Copy none certs to nginx directory"
    copy:
      src: "{{ item }}"
      dest: "{{ data_dir }}/nginx/ssl/{{ item }}"
      owner: "{{ deploy_user }}"
      group: "{{ deploy_group }}"
      mode: 0660
      force: yes
    loop:
      - "none.key"
      - "none.crt"

  - name: "push base nginx.conf file"
    template: src="nginx.conf.j2"
              dest="{{ data_dir }}/nginx/conf/nginx.conf"
              force=yes 
              backup=yes
    notify: restart nginx
    tags: 
      - nginx
      - nginx_config

  - name: "change owner"
    file:   
      path: "{{ data_dir }}/nginx"
      owner: "{{ deploy_user }}"
      group: "{{ deploy_group }}"
      recurse: yes
      state: directory
    become: yes
    become_user: root
    tags: nginx

  - name: "Delete old /etc/nginx/sites-*"
    file:
      path: '/etc/nginx/{{ item }}'
      state: absent
    with_items:
      - sites-available
      - sites-enabled
      - ssl
      - nginx.conf
    become: yes
    become_user: root
    tags:
      - nginx
      - nginx-extras


  - name: "Create symlinks from /opt/data/apps/nginx/conf to /etc/nginx"
    file:
      path: '/etc/nginx/{{ item }}'
      src: '{{ data_dir }}/nginx/conf/{{ item }}'
      state: link
      force : yes
    with_items:
      - sites-available
      - sites-enabled
      - nginx.conf
    become: yes
    become_user: root
    tags:
      - nginx
      - nginx-extras

  - name: Copy nginx configuration update script for new IPs
    become: true
    become_user: root
    copy:
      src: update_nginx_containers_ip.sh
      dest: /etc/init.d/update_nginx_containers_ip.sh
      mode: 0755
      owner: root
      group: root
    tags:
      - docker
      - service
      - nginx
    
  - name: Copy systemd service unit file
    become: true
    become_user: root
    copy:
      src: update_nginx_containers_ip.service
      dest: /etc/systemd/system/update_nginx_containers_ip.service
      mode: 0644
      owner: root
      group: root
    tags:
      - docker
      - service
      - nginx

  - name: "reload systemd"
    become: true
    become_user: root
    systemd:
      name: docker
      enabled: yes
      state: restarted
      daemon_reload: yes
    tags:
      - docker
      - service

  - name: Activate systemd service unit file
    become: true
    become_user: root
    systemd:
      state: started
      enabled: yes
      name: update_nginx_containers_ip
      daemon_reload: yes
    tags:
      - docker
      - service
      - nginx


  ##################################################################################################
  # end of the play
  #
